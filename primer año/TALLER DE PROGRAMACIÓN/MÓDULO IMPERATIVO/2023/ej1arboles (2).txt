program p3p1;

type

 socio = record
   numsocio: integer;
   nombre: string;
   edad: integer;
  end;
 
arbol = ^nodo;

nodo = record
	dato: socio;
	hi: arbol;
	hd: arbol;
end;


procedure leer (var s: socio);
begin
  writeln ('ingrese el numero de socio'); 
  readln (s.numsocio);
  writeln ('ingrese el nombre del socio');
  readln (s.nombre);
  writeln ('ingrese la edad del socio');
  readln (s.edad);
end;


procedure agregar(var a: arbol; s: socio);  // inciso a
begin
  if (a=nil)then
  begin
    new (a);
    a^.dato:= s;
    a^.hi:= nil;
    a^.hd:= nil;
  end
  else begin
    if (s.numsocio < a^.dato.numsocio)then
      agregar(a^.hi, s)
    else
      agregar (a^.hd, s);
  end;
end;
  
   
function sociomasgrande (a:arbol): integer;  // inciso b (i)
begin
  if (a<>nil)then
  begin
    if (a^.hd<>nil) then
      sociomasgrande:= sociomasgrande (a^.hd)
    else
		sociomasgrande:= a^.dato.numsocio;
  end
  else
	sociomasgrande:=-1;
end;

procedure sociomaschico (a:arbol;var min:socio); // ii
begin
  if (a<>nil) then
  begin
    if (a^.hi<>nil)then
      sociomaschico (a^.hi,min)
    else
      min:= a^.dato
  end
  else
  writeln ('el arbol esta vacio');
end;
    
procedure imprimirsociomaschico (m: socio);
begin
	writeln ('los datos del n socio mas chico son: ');
	writeln ('numero: ', m.numsocio);
	writeln ('nombre: ', m.nombre);
	writeln ('edad: ', m.edad);
end;

procedure sociomasviejo (a: arbol; var max: integer; var num: integer); // iii
begin
	if (a <> nil) then begin
		sociomasviejo (a^.hi, max, num); 
		if (a^.dato.edad > max) then
		begin
			max:= a^.dato.edad;
			num:= a^.dato.numsocio;
		end;
		sociomasviejo (a^.hd, max, num);
	end;
end;

procedure incrementaredad (var a: arbol); // iv
begin
	if (a <>nil) then begin
		incrementaredad (a^.hi);
		a^.dato.edad:= a^.dato.edad + 1;
		incrementaredad (a^.hd);
	end;
end;

function existe (a: arbol; valor: integer) : boolean ; // vi no se si esta bien
var	
	ex: boolean;
begin
	ex:= false;
	if (a <> nil) then begin
		if (a^.hi <> nil) then begin
			if (a^.dato.numsocio = valor) then
				existe:= true
			else
				existe:= existe (a^.hi, valor)
		end
		else begin
			if (a^.dato.numsocio = valor) then
				existe:= true
			else
				existe:= existe (a^.hd, valor);
		end;
	end;
	existe:= ex;
end;

procedure cantsocios (a: arbol; var cant: integer) ; // vii
begin
	if (a <> nil) then begin
		cantsocios (a^.hi, cant);
		cant:= cant + 1;
		cantsocios (a^.hd, cant);
	end;
end;	
	
procedure sumaedades (a: arbol; var suma: integer);
begin
	if (a <> nil) then begin
		sumaedades (a^.hi, suma);
		suma:= suma + a^.dato.edad;
		sumaedades (a^.hd, suma);
	end;
end;

function promedio (a: arbol) : real ;
var
	suma, cant: integer;
begin
	cantsocios (a, cant);
	sumaedades (a, suma);
	promedio:= suma / cant 
end;



	
var
	a:arbol;
	soc: socio;
	min:socio;
	maxEDAD, maxNUM: integer;
	v: integer;
	cant: integer;
begin
  
	a:= nil;
	leer (soc);
	while (soc.numsocio <> 0) do 
	begin
		agregar (a, soc);
		leer (soc);
	end;
	writeln ('el socio con numero de socio mas grande es ', sociomasgrande(a));
	sociomaschico(a,min);
	imprimirsociomaschico (min);
	maxEDAD:= 0; maxNUM:= 0;
	sociomasviejo (a, maxEDAD, maxNUM);
	writeln ('el numero del socio mas viejo es: ', maxNUM) ;
	incrementaredad (a);
	writeln ('ingrese un valor'); 
	read (v);
	writeln ('existe?', existe (a, v));
	cantsocios (a, cant);
	writeln ('la cantidad de socios es ', cant); 
	writeln ( 'el promedio de edades es ', promedio (a) ); 
end.